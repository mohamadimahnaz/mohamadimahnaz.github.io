{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Rezome","React","Component","GitHubProfile","props","state","fetch","then","response","json","data","setState","avatarUrl","avatar_url","name","username","login","location","company","className","src","this","CardInput","document","querySelector","id","type","placeholder","required","CardTextarea","CardBtn","value","CardProfileLinks","linksList","map","link","index","href","CardFront","CardBack","formAction","Card","ReactDOM","render","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.e9c0784a.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nclass Rezome extends React.Component {\n    render() {\n        return ( <\n            GitHubProfile / >\n        )\n    }\n}\n\nclass GitHubProfile extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    componentWillMount() {\n        fetch('https://api.github.com/users/mohamadimahnaz')\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({\n                    avatarUrl: data.avatar_url,\n                    name: data.name,\n                    username: data.login,\n                    location: data.location,\n                    company: data.company\n                })\n            })\n    }\n\n    render() {\n        return ( < div > <\n            div className = 'rh-profile-container' >\n            <\n            img src = { this.state.avatarUrl }\n            /> <\n            p > { this.state.username } < /p> <\n            p > { this.state.name } < /p>\n\n            <\n            p > { this.state.location } < /p>   \n\n            <\n            /\n            div >\n            <\n            div className = \"lh-profile-container\" >\n            <\n            Card / >\n            <\n            /\n            div > < /div >\n        )\n    }\n}\nconst cardContainer = document.querySelector('.react-card');\n\n// React component for form inputs\nclass CardInput extends React.Component {\n    render() {\n        return ( <\n            fieldset >\n            <\n            input name = { this.props.name }\n            id = { this.props.id }\n            type = { this.props.type || 'text' }\n            placeholder = { this.props.placeholder }\n            required / >\n            <\n            /fieldset>\n        )\n    }\n}\n\n// React component for textarea\nclass CardTextarea extends React.Component {\n    render() {\n        return ( <\n            fieldset >\n            <\n            textarea name = { this.props.name }\n            id = { this.props.id }\n            placeholder = { this.props.placeholder }\n            required > < /textarea> < /\n            fieldset >\n        )\n    }\n}\n\n// React component for form button\nclass CardBtn extends React.Component {\n    render() {\n        return ( <\n            fieldset >\n            <\n            button className = { this.props.className }\n            type = { this.props.type }\n            value = { this.props.value } > { this.props.value } < /button> < /\n            fieldset >\n        )\n    }\n}\n\n// React component for social profile links\nclass CardProfileLinks extends React.Component {\n    render() {\n        const profileLinks = ['twitter', 'linkedin', 'dribbble', 'facebook'];\n\n        const linksList = profileLinks.map((link, index) =>\n            <\n            li key = { index } > < a href = '#' > < i className = { 'fa fa-' + link } > < /i></a > < /li>\n        );\n\n        return ( <\n            div className = 'card-social-links' >\n            <\n            ul className = 'social-links' > { linksList } <\n            /ul> < /\n            div >\n        )\n    }\n}\n\n// React component for the front side of the card\nclass CardFront extends React.Component {\n    render() {\n        return ( <\n            div className = 'card-side side-front' >\n            <\n            div className = 'container-fluid' >\n            <\n            div className = 'row' >\n            <\n            div className = 'col-xs-6' >\n            <\n            img src = '' / >\n            <\n            /div>\n\n            <\n            div className = 'col-xs-6 side-front-content' >\n            <\n            h1 > درباره من < /h1>\n\n            <\n            h2 > مهناز محمدی < /h2 >\n\n            <\n            p > مهناز محمدی 37 ساله متاهل و دارای یک فرزند می باشم, کارشناس برنامه نویسی وب از دانشگاه علمی و کاربردی شهرداری تهران و دانشجوی کارشناسی ارشد دانشگاه پیام نور در رشته نرم افزار هستم. < /p>\n\n            <\n            /\n            div > <\n            /div> < /\n            div > <\n            /div>\n        )\n    }\n}\n\n// React component for the back side of the card\nclass CardBack extends React.Component {\n    render() {\n        return ( <\n            div className = 'card-side side-back' >\n            <\n            div className = 'container-fluid' >\n            <\n            h1 > تماس با من < /h1>\n\n            <\n            form formAction = ''\n            className = 'card-form' >\n            <\n            div className = 'row' >\n            <\n            div className = 'col-xs-6' >\n            <\n            CardInput name = 'contactFirstName'\n            id = 'contactFirstName'\n            type = 'text'\n            placeholder = 'نام خود را وارد کنید' / >\n            <\n            /div>\n\n            <\n            div className = 'col-xs-6' >\n            <\n            CardInput name = 'contactLastName'\n            id = 'contactLastName'\n            type = 'text'\n            placeholder = 'نام خانوادگی خود را وارد کنید' / >\n            <\n            /div> < /\n            div >\n\n            <\n            div className = 'row' >\n            <\n            div className = 'col-xs-6' >\n            <\n            CardInput name = 'contactEmail'\n            id = 'contactEmail'\n            type = 'email'\n            placeholder = 'ایمیل خود را وارد کنید' / >\n            <\n            /div>\n\n            <\n            div className = 'col-xs-6' >\n            <\n            CardInput name = 'contactSubject'\n            id = 'contactSubject'\n            type = 'text'\n            placeholder = 'موضوع' / >\n            <\n            /div> < /\n            div >\n\n            <\n            CardTextarea name = 'contactMessage'\n            id = 'contactMessage'\n            placeholder = 'متن پیام' / >\n\n            <\n            CardBtn className = 'btn btn-primary'\n            type = 'submit'\n            value = 'ارسال پیام' / >\n            <\n            /form>\n\n            <\n            CardProfileLinks / >\n            <\n            /div> < /\n            div >\n        )\n    }\n}\n\n// React component for the card (main component)\nclass Card extends React.Component {\n    render() {\n        return ( <\n            div className = 'card-container' >\n            <\n            div className = 'card-body' >\n            <\n            CardBack / >\n\n            <\n            CardFront / >\n            <\n            /div> < /\n            div >\n        )\n    }\n}\n\n\n\n\nReactDOM.render( < Rezome / > , document.getElementById('root'))\nexport default Rezome","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Rezome from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    Rezome / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}